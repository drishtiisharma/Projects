{"ast":null,"code":"const FILTER_KEYWORDS = [\"OVA\", \"Movie\", \"Special\", \"ONA\", \"Recap\", \"Season\", \"Part\"];\nexport const cleanTitle = title => {\n  // Remove subtitles and extra words but keep full anime name\n  let mainTitle = title.split(/[:\\-|]/)[0].trim();\n  mainTitle = mainTitle.replace(/https?.*/, '').trim();\n  return mainTitle;\n};\nexport const filterAnimeList = animeList => {\n  // Remove duplicates & filter unwanted types\n  const seenTitles = new Set();\n  const filteredList = [];\n  for (const anime of animeList) {\n    if (FILTER_KEYWORDS.some(keyword => anime.includes(keyword))) {\n      continue; // Skip OVAs, Movies, Specials, and other extras\n    }\n    const mainTitle = cleanTitle(anime);\n    if (mainTitle && !seenTitles.has(mainTitle)) {\n      seenTitles.add(mainTitle);\n      filteredList.push(mainTitle);\n    }\n  }\n\n  // Sort alphabetically and number the list\n  return filteredList.sort().map((title, index) => `${index + 1}. ${title}`);\n};","map":{"version":3,"names":["FILTER_KEYWORDS","cleanTitle","title","mainTitle","split","trim","replace","filterAnimeList","animeList","seenTitles","Set","filteredList","anime","some","keyword","includes","has","add","push","sort","map","index"],"sources":["C:/Users/HP/Desktop/Github-Projects/Projects/Anime-Filter-App/src/utils/animeFilter.js"],"sourcesContent":["const FILTER_KEYWORDS = [\"OVA\", \"Movie\", \"Special\", \"ONA\", \"Recap\", \"Season\", \"Part\"];\r\n\r\nexport const cleanTitle = (title) => {\r\n  // Remove subtitles and extra words but keep full anime name\r\n  let mainTitle = title.split(/[:\\-|]/)[0].trim();\r\n  mainTitle = mainTitle.replace(/https?.*/, '').trim();\r\n  return mainTitle;\r\n};\r\n\r\nexport const filterAnimeList = (animeList) => {\r\n  // Remove duplicates & filter unwanted types\r\n  const seenTitles = new Set();\r\n  const filteredList = [];\r\n  \r\n  for (const anime of animeList) {\r\n    if (FILTER_KEYWORDS.some(keyword => anime.includes(keyword))) {\r\n      continue; // Skip OVAs, Movies, Specials, and other extras\r\n    }\r\n    \r\n    const mainTitle = cleanTitle(anime);\r\n    \r\n    if (mainTitle && !seenTitles.has(mainTitle)) {\r\n      seenTitles.add(mainTitle);\r\n      filteredList.push(mainTitle);\r\n    }\r\n  }\r\n  \r\n  // Sort alphabetically and number the list\r\n  return filteredList.sort().map((title, index) => `${index + 1}. ${title}`);\r\n};"],"mappings":"AAAA,MAAMA,eAAe,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC;AAErF,OAAO,MAAMC,UAAU,GAAIC,KAAK,IAAK;EACnC;EACA,IAAIC,SAAS,GAAGD,KAAK,CAACE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC;EAC/CF,SAAS,GAAGA,SAAS,CAACG,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAACD,IAAI,CAAC,CAAC;EACpD,OAAOF,SAAS;AAClB,CAAC;AAED,OAAO,MAAMI,eAAe,GAAIC,SAAS,IAAK;EAC5C;EACA,MAAMC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;EAC5B,MAAMC,YAAY,GAAG,EAAE;EAEvB,KAAK,MAAMC,KAAK,IAAIJ,SAAS,EAAE;IAC7B,IAAIR,eAAe,CAACa,IAAI,CAACC,OAAO,IAAIF,KAAK,CAACG,QAAQ,CAACD,OAAO,CAAC,CAAC,EAAE;MAC5D,SAAS,CAAC;IACZ;IAEA,MAAMX,SAAS,GAAGF,UAAU,CAACW,KAAK,CAAC;IAEnC,IAAIT,SAAS,IAAI,CAACM,UAAU,CAACO,GAAG,CAACb,SAAS,CAAC,EAAE;MAC3CM,UAAU,CAACQ,GAAG,CAACd,SAAS,CAAC;MACzBQ,YAAY,CAACO,IAAI,CAACf,SAAS,CAAC;IAC9B;EACF;;EAEA;EACA,OAAOQ,YAAY,CAACQ,IAAI,CAAC,CAAC,CAACC,GAAG,CAAC,CAAClB,KAAK,EAAEmB,KAAK,KAAK,GAAGA,KAAK,GAAG,CAAC,KAAKnB,KAAK,EAAE,CAAC;AAC5E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}