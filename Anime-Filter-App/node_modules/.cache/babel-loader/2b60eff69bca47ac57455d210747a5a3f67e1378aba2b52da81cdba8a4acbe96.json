{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Github-Projects\\\\Projects\\\\Anime-Filter-App\\\\src\\\\components\\\\FileUpload\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport './FileUpload.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onFileProcess,\n  isProcessing\n}) => {\n  _s();\n  const fileInputRef = useRef(null);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const fileType = file.name.split('.').pop().toLowerCase();\n    if (!['txt', 'html', 'xml'].includes(fileType)) {\n      alert('Please upload a TXT, HTML, or XML file');\n      return;\n    }\n    onFileProcess(file);\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (event.dataTransfer.files && event.dataTransfer.files.length > 0) {\n      fileInputRef.current.files = event.dataTransfer.files;\n      handleFileUpload(event);\n    }\n  };\n  const handleDragOver = event => {\n    event.preventDefault();\n    event.stopPropagation();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-area\",\n    onDrop: handleDrop,\n    onDragOver: handleDragOver,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      onChange: handleFileUpload,\n      accept: \".txt,.html,.xml\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), isProcessing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"processing\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Processing your anime list...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fileInputRef.current.click(),\n        className: \"upload-button\",\n        disabled: isProcessing,\n        children: \"Choose File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"or drag and drop your file here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"file-types\",\n        children: \"Supported formats: TXT, HTML, XML\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"YQqvMxdmg33cmOXmQcOjJm+FLVI=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","FileUpload","onFileProcess","isProcessing","_s","fileInputRef","handleFileUpload","event","file","target","files","fileType","name","split","pop","toLowerCase","includes","alert","handleDrop","preventDefault","stopPropagation","dataTransfer","length","current","handleDragOver","className","onDrop","onDragOver","children","type","ref","onChange","accept","style","display","fileName","_jsxFileName","lineNumber","columnNumber","onClick","click","disabled","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Github-Projects/Projects/Anime-Filter-App/src/components/FileUpload/FileUpload.jsx"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport './FileUpload.css';\r\n\r\nconst FileUpload = ({ onFileProcess, isProcessing }) => {\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n    \r\n    const fileType = file.name.split('.').pop().toLowerCase();\r\n    if (!['txt', 'html', 'xml'].includes(fileType)) {\r\n      alert('Please upload a TXT, HTML, or XML file');\r\n      return;\r\n    }\r\n    \r\n    onFileProcess(file);\r\n  };\r\n\r\n  const handleDrop = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    \r\n    if (event.dataTransfer.files && event.dataTransfer.files.length > 0) {\r\n      fileInputRef.current.files = event.dataTransfer.files;\r\n      handleFileUpload(event);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className=\"upload-area\"\r\n      onDrop={handleDrop}\r\n      onDragOver={handleDragOver}\r\n    >\r\n      <input\r\n        type=\"file\"\r\n        ref={fileInputRef}\r\n        onChange={handleFileUpload}\r\n        accept=\".txt,.html,.xml\"\r\n        style={{ display: 'none' }}\r\n      />\r\n      \r\n      {isProcessing ? (\r\n        <div className=\"processing\">\r\n          <div className=\"spinner\"></div>\r\n          <p>Processing your anime list...</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <button \r\n            onClick={() => fileInputRef.current.click()}\r\n            className=\"upload-button\"\r\n            disabled={isProcessing}\r\n          >\r\n            Choose File\r\n          </button>\r\n          \r\n          <p>or drag and drop your file here</p>\r\n          <p className=\"file-types\">Supported formats: TXT, HTML, XML</p>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}